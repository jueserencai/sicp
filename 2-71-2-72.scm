; 2.71
; n=5 时的树（只显示相对频度，不显示数据）：

;         *
;        /\
;       *  16
;      /\
;     *  8
;    / \
;   *   4
;  /\
; 1  2
; n=10 时的树（只显示相对频度，不显示数据）：

;                   *
;                  /\
;                 *  512
;                /\
;               *  256
;              /\
;             * 128
;            /\
;           *  64
;          /\
;         *  32
;        /\
;       *  16
;      /\
;     *  8
;    / \
;   *   4
;  /\
; 1  2
; 可以看出，对于这种类型的树，编码使用最频繁的字符需要 1 个二进制位，而编码最不常用的字符需要 n−1 个二进制位。


; 2.72
; 如果符号的相对频度跟 练习 2.71 所列举的一样，那么根据 练习 2.71 的结果，对于出现最频繁的字符，每次编码它需要下降 11 层，而对于出现最不频繁的字符，每次编码它需要下降 n−1 层。

; 因此，如果编码字符的次数为 n ，那么对最频繁出现的字符进行编码的复杂度为 Θ(n) ，而对最不频繁出现的字符进行编码的复杂度为 Θ(n2) 